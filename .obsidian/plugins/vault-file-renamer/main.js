/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

"use strict";var h=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var u=Object.prototype.hasOwnProperty;var m=(r,s)=>{for(var e in s)h(r,e,{get:s[e],enumerable:!0})},F=(r,s,e,t)=>{if(s&&typeof s=="object"||typeof s=="function")for(let a of p(s))!u.call(r,a)&&a!==e&&h(r,a,{get:()=>s[a],enumerable:!(t=g(s,a))||t.enumerable});return r};var w=r=>F(h({},"__esModule",{value:!0}),r);var b={};m(b,{default:()=>l});module.exports=w(b);var n=require("obsidian"),y={},l=class extends n.Plugin{constructor(){super(...arguments);this.renamingInProgress=new Set}async onload(){await this.loadSettings(),await this.standardizeAll(),this.registerEvent(this.app.vault.on("create",async t=>{t instanceof n.TFile?setTimeout(()=>this.standardizeFile(t),50):t instanceof n.TFolder&&setTimeout(()=>this.standardizeFolder(t),50)})),this.registerEvent(this.app.vault.on("rename",async(t,a)=>{t instanceof n.TFile?setTimeout(()=>this.standardizeFile(t),50):t instanceof n.TFolder&&setTimeout(()=>this.standardizeFolder(t),50)})),this.addRibbonIcon("dice","Vault File Renamer",()=>{new n.Notice("Vault File Renamer is active!")}).addClass("vault-file-renamer-ribbon"),this.addSettingTab(new c(this.app,this))}onunload(){}async standardizeAll(){let e=this.app.vault.getFiles();for(let t of e)await this.standardizeFile(t);await this.standardizeAllFolders(this.app.vault.getRoot())}async standardizeAllFolders(e){for(let t of e.children)t instanceof n.TFolder&&(await this.standardizeAllFolders(t),await this.standardizeFolder(t))}async standardizeFile(e){if(this.renamingInProgress.has(e.path))return;let t=this.generateStandardName(e.name),a=e.parent?e.parent.path:"",i=(0,n.normalizePath)(a?`${a}/${t}`:t);if(e.path===i)return;let o=this.app.vault.getAbstractFileByPath(i);if(o&&o!==e){new n.Notice(`A file with the name "${t}" already exists. Skipping rename.`);return}this.renamingInProgress.add(e.path);try{await this.app.vault.rename(e,i)}catch(d){console.error(`Error renaming file ${e.path}:`,d)}finally{this.renamingInProgress.delete(e.path)}}async standardizeFolder(e){if(this.renamingInProgress.has(e.path))return;let t=this.generateStandardNameForFolder(e.name),a=e.parent?e.parent.path:"",i=(0,n.normalizePath)(a?`${a}/${t}`:t);if(e.path===i)return;let o=this.app.vault.getAbstractFileByPath(i);if(o&&o!==e){new n.Notice(`A folder with the name "${t}" already exists. Skipping rename.`);return}this.renamingInProgress.add(e.path);try{await this.app.vault.rename(e,i)}catch(d){console.error(`Error renaming folder ${e.path}:`,d)}finally{this.renamingInProgress.delete(e.path)}}generateStandardName(e){let t=e.lastIndexOf("."),a=e,i="";return t>0&&(a=e.substring(0,t),i=e.substring(t).toLowerCase()),a=a.toLowerCase(),a=a.normalize("NFD").replace(/[\u0300-\u036f]/g,""),a=a.replace(/\s+/g,"-"),a=a.replace(/[^a-z0-9\-_.]/g,"-"),a+i}generateStandardNameForFolder(e){let t=e.toLowerCase();return t=t.normalize("NFD").replace(/[\u0300-\u036f]/g,""),t=t.replace(/\s+/g,"-"),t=t.replace(/[^a-z0-9\-_.]/g,"-"),t}async loadSettings(){this.settings=Object.assign({},y,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},c=class extends n.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),new n.Setting(e).setName("Automatic renaming").setDesc("Files and folders are automatically renamed on creation and manual renaming.").addToggle(t=>t.setValue(!0).onChange(async a=>{new n.Notice("Automatic renaming is always enabled in this version.")}))}};

/* nosourcemap */